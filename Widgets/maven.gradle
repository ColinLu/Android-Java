apply plugin: 'maven-publish'

task javadocJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'javadoc'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}


publishing {
    publications {
        aar(MavenPublication) {
            def projectName = project.name
            //自定义配置 groupId:artifactId:version
            groupId mavens.widgets_group_id
            artifactId mavens.widgets_artifact_id
            version mavens.widgets_version
            artifact(javadocJar)
            artifact(sourceJar)
            //需要Maven上车的aar 路径及文件名
            artifact("$buildDir/outputs/aar/${projectName}-release.aar")
            println("url_remote:${mavens.url_remote}")
            println("url_local :${mavens.url_local}")
            println("publishing-->>${groupId}:${artifactId}:${version}")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    if (dp.version != "unspecified") {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule rule ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', rule.group)
                                exclusion.appendNode('artifactId', rule.module)
                            }
                        }
                    }
                }
            }
        }
    }

    repositories {
        //指定上传Maven仓库远程地址与账户密码
        maven {
            url = mavens.url_remote
            credentials {
                username = mavens.username
                password = mavens.password
            }
        }
        //指定上传Maven仓库本地地址
        mavenLocal {
            url = mavens.url_local
        }
    }
}