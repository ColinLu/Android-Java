plugins {
    id 'com.android.application'
}

// 加载 sign.properties 资源
Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file('sign.properties')))

android {

    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId build_versions.application_id
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode build_versions.app_version_code
        versionName build_versions.app_version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        flavorDimensions "versionCode"
        flavorDimensions "app"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }

    }

    //签名
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file(signingProperties['KEYSTORE_FILEPATH'])
            storePassword signingProperties['STORE_PASSWORD']
            keyAlias signingProperties['KEY_ALIAS']
            keyPassword signingProperties['KEY_PASSWORD']
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            debuggable true
            jniDebuggable true
            minifyEnabled false             //true，打开混淆；
            shrinkResources false           //打开资源压缩
            zipAlignEnabled true            //是否移除无用资源
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    networkSecurityConfig: "@xml/network_security_config_test"
            ]
        }
        release {
            ext.enableCrashlytics = false
            debuggable false
            jniDebuggable false
            minifyEnabled false             //true，打开混淆；
            shrinkResources false           //打开资源压缩
            zipAlignEnabled true            //是否移除无用资源
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    networkSecurityConfig: "@xml/network_security_config"
            ]
        }
    }

    dexOptions {
        //最大堆内存
        javaMaxHeapSize '2048m'
        //预编译
        preDexLibraries = true
        //线程数
        threadCount = 16
        dexInProcess = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'RestrictedApi'
    }

}

dependencies {
    implementation project(path: ':Base')
    implementation project(path: ':Utils')
    implementation project(path: ':Widgets')
    implementation project(path: ':OkHttp')

    implementation dependency.android_material
    implementation dependency.androidx_appcompat
    implementation dependency.androidx_legacy
    implementation dependency.life_livedata
    implementation dependency.life_viewmodel
    implementation dependency.room_runtime
    implementation dependency.room_rxjave2
    implementation dependency.room_ktx
    implementation dependency.work_runtime
    implementation dependency.work_ktx
    implementation dependency.navigation_fragment
    implementation dependency.navigation_ui
    implementation dependency.widget_constraint
    implementation dependency.widget_swiperefresh
    implementation dependency.widget_viewpager2
    implementation dependency.rx_java
    implementation dependency.rx_android
    implementation dependency.g_son
    implementation dependency.ok_http

    testImplementation dependency.test_android_junit
    androidTestImplementation dependency.test_androidx_junit
    androidTestImplementation dependency.test_androidx_espresso

}