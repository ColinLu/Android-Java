apply plugin: 'maven-publish'

task javadocJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'javadoc'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

task buildAar(dependsOn: ["assembleRelease", "assembleDebug"]) {
    doLast {
        println("build aar success :$dependsOn")
    }
}


publishing {
    publications {
        android.productFlavors.each {
            def flavor = it.name
            "$flavor"(MavenPublication) {
                def projectName = project.name
                groupId mavens.utils_group_id
                artifactId mavens.utils_artifact_id
                version mavens.utils_version
                artifact(javadocJar)
                artifact(sourceJar)
                artifact("$buildDir/outputs/aar/${projectName}_${flavor}_release.aar")
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                        if (dp.version != "unspecified") {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', dp.group)
                            dependencyNode.appendNode('artifactId', dp.name)
                            dependencyNode.appendNode('version', dp.version)
                            if (dp.excludeRules.size() > 0) {
                                def exclusions = dependencyNode.appendNode('exclusions')
                                dp.excludeRules.each { ExcludeRule rule ->
                                    def exclusion = exclusions.appendNode('exclusion')
                                    exclusion.appendNode('groupId', rule.group)
                                    exclusion.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    repositories {
        maven {
            //指定上传Maven仓库远程地址与账户密码
            url = mavens.url_remote
            credentials {
                username = mavens.username
                password = mavens.password
            }
        }
        mavenLocal {
            //指定上传Maven仓库本地地址
            url = mavens.url_local
        }
    }
}


