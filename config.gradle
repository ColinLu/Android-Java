/**
 * APP版本号、插件版本、编译相关版本管理*/
def build_versions = [:]
build_versions.android_gradle_plugin = '7.1.3'
build_versions.application_id = "com.colin.android.demo.java"
build_versions.min_sdk = 29
build_versions.target_sdk = 31
build_versions.compile_sdk = 31
build_versions.app_version_name = "0.0.1"
build_versions.util_version_name = "0.0.1"
build_versions.util_version_code = 1000000
build_versions.okhttp_version_name = "0.0.1"
build_versions.okhttp_version_code = 1000000
build_versions.widget_version_name = "0.0.1"
build_versions.widget_version_code = 1000000
build_versions.base_version_name = "0.0.1"
build_versions.base_version_code = 1000000
ext.build_versions = build_versions

/**
 * 依赖库版本*/
def versions = [:]
versions.material = '1.5.0'
versions.appcompat = '1.4.1'
versions.legacy = '1.0.0'
versions.life = '2.4.1'
versions.room = '2.4.2'
versions.work = '2.7.1'
versions.navigation = '2.4.1'
versions.constraint = '2.1.3'
versions.swiperefresh = '1.1.0'
versions.recyclerview = '1.1.0'
versions.viewpager2 = '1.0.0'
versions.rx_java = '2.2.21'
versions.rx_android = '2.1.1'
versions.ok_http = '5.0.0-alpha.11'
versions.g_son = '2.10.1'
versions.android_junit = '4.13.2'
versions.androidx_junit = '1.1.3'
versions.androidx_espresso = "3.4.0"
ext.versions = versions


/**
 * 依赖管理*/
def dependency = [:]
dependency.android_material = "com.google.android.material:material:${versions.material}"
dependency.androidx_appcompat = "androidx.appcompat:appcompat:${versions.appcompat}"
dependency.androidx_legacy = "androidx.legacy:legacy-support-v4:${versions.legacy}"
dependency.life_livedata = "androidx.lifecycle:lifecycle-livedata-ktx:${versions.life}"
dependency.life_viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.life}"
dependency.room_runtime = "androidx.room:room-runtime:${versions.room}"
dependency.room_rxjave2 = "androidx.room:room-rxjava2:${versions.room}"
dependency.room_ktx = "androidx.room:room-ktx:${versions.room}"
dependency.work_ktx = "androidx.room:room-ktx:${versions.room}"
dependency.work_runtime = "androidx.work:work-runtime-ktx:${versions.work}"
dependency.navigation_fragment = "androidx.navigation:navigation-fragment:${versions.navigation}"
dependency.navigation_ui = "androidx.navigation:navigation-ui:${versions.navigation}"
dependency.widget_constraint = "androidx.constraintlayout:constraintlayout:${versions.constraint}"
dependency.widget_swiperefresh = "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swiperefresh}"
dependency.widget_recyclerview = "androidx.recyclerview:recyclerview:${versions.recyclerview}"
dependency.widget_viewpager2 = "androidx.viewpager2:viewpager2:${versions.viewpager2}"
//RxJava
dependency.rx_java = "io.reactivex.rxjava2:rxjava:${versions.rx_java}"
dependency.rx_android = "io.reactivex.rxjava2:rxandroid:${versions.rx_android}"
//Http
dependency.ok_http = "com.squareup.okhttp3:okhttp:${versions.ok_http}"
dependency.g_son = "com.google.code.gson:gson:${versions.g_son}"

dependency.base = 'com.colin.library.android:Base:0.0.1'

//UnitTest
dependency.test_android_junit = 'junit:junit:4.13.2'
dependency.test_androidx_junit = 'androidx.test.ext:junit:1.1.3'
dependency.test_androidx_espresso = 'androidx.test.espresso:espresso-core:3.4.0'


ext.dependency = dependency

/**
 * 路径常量*/
def paths = [:]
paths.room_schema = "$projectDir/schemas"
ext.paths = paths


/**
 * 仓库地址管理*/
def addRepos(RepositoryHandler handler) {
//    handler.maven {
//        allowInsecureProtocol true
//        url 'http://maven.aliyun.com/nexus/content/groups/public/'
//    }
//    handler.maven {
//        allowInsecureProtocol true
//        url 'http://maven.aliyun.com/repository/google/'
//    }
//    handler.maven {
//        allowInsecureProtocol true
//        url 'https://maven.aliyun.com/repository/jcenter/'
//    }
//    handler.maven {
//        allowInsecureProtocol true
//        url 'https://maven.aliyun.com/repository/public/'
//    }
//    handler.maven {
//        allowInsecureProtocol true
//        url 'https://jitpack.io'
//    }
//    handler.maven {
//        allowInsecureProtocol true
//        url 'https://s01.oss.sonatype.org/content/groups/public'
//    }
    handler.mavenCentral()
    handler.google()
}

ext.addRepos = this.&addRepos

/**
 * 读取本机配置，主要用于本地差异化构建(local.properties不会提交到仓库)*/
def readLocalProperty(String key) {
    boolean value = false
    def file = rootProject.file('local.properties')
    if (file.exists() && file.isFile()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
        value = Boolean.parseBoolean(properties.getProperty(key, 'false'))
    }
    println(String.format("property key=%s value=%S", key, value))
    return value
}

ext.readLocalProperty = this.&readLocalProperty